#!/usr/bin/env bash

# This script manages bluetooth connectivity

USAGE="Usage: $0 on/off [-cd]"

[ $# = 0 ] && blueutil -p
! [ $# = 1 ] && echo "$USAGE" && exit 0

function get_id()
{
    devices_number=($(blueutil --paired | sed 's|,||g' | awk ' {print $2} '))
    IFS=$'\n' devices_names=($(blueutil --paired | awk -F, ' {print $5} ')); IFS=$' '
    noDevice=0
    for ((i=0; i<${#devices_number[@]};++i))
    do
        printf "[%s] %s\t%s\n" "$i" "${devices_number[$i]}" "${devices_names[$i]#*:}"
        (( noDevice++ ))
    done
    (( noDevice-- ))

    echo " "
    echo "Enter a number between 0 and $noDevice or type 'q' to exit."
    while true
    do
        read -p ">>> " num
        [ "$num" = "q" ] && echo "Exiting..." && exit 0
        if [ "$num" -ge 0 ] && [ "$num" -le "$noDevice" ] && [ "$num" -eq "$num" ]
            then
                echo "You selected: ${devices_number[$num]}"
                break
        fi
    done
    id="${devices_number[$num]}"
}

case "$1" in
    -h|--help)
        echo "Options:"
        echo "on                Turn bluetooth on."
        echo "off               Turn bluetooth off."
        echo "-h|--help         Show brief help."
        echo "-c|--connect      Connect selected device."
        echo "-d|--disconnect   Disconnect selected device."
        exit 0
        ;;
    on)
        blueutil -p "1"
        exit 0
        ;;
    off)
        [ "$(blueutil -p)" -eq "1" ] && blueutil -p "0"
        exit 0
        ;;
    -c|--connnect)
        get_id
        blueutil --connect "$id"
        exit 0
        ;;
    -d|--disconnect)
        get_id
        blueutil --disconnect "$id"
        exit 0
        ;;
    *) echo "$USAGE"
esac
